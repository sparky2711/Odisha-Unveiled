{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = sequenceOfValidator;\nvar _propTypes = require(\"prop-types\");\nvar _and = _interopRequireDefault(require(\"./and\"));\nvar _between = _interopRequireDefault(require(\"./between\"));\nvar _nonNegativeInteger = _interopRequireDefault(require(\"./nonNegativeInteger\"));\nvar _object = _interopRequireDefault(require(\"./object\"));\nvar _withShape = _interopRequireDefault(require(\"./withShape\"));\nvar _typeOf = _interopRequireDefault(require(\"./helpers/typeOf\"));\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar minValidator = _nonNegativeInteger[\"default\"];\nvar maxValidator = (0, _and[\"default\"])([_nonNegativeInteger[\"default\"], (0, _between[\"default\"])({\n  gte: 1\n})]);\nfunction validateRange(min, max) {\n  if (typeof max !== 'number' || typeof min !== 'number') {\n    return null; // no additional checking needed unless both are present\n  }\n\n  if (min <= max) {\n    return null;\n  }\n  return new RangeError('min must be less than or equal to max');\n}\nvar specifierShape = {\n  validator: function validator(props, propName) {\n    var propValue = props[propName];\n    if (typeof propValue !== 'function') {\n      return new TypeError('\"validator\" must be a propType validator function');\n    }\n    return null;\n  },\n  min: function min(props, propName) {\n    return minValidator(props, propName) || validateRange(props.min, props.max);\n  },\n  max: function max(props, propName) {\n    return maxValidator(props, propName) || validateRange(props.min, props.max);\n  }\n};\nfunction getMinMax(_ref) {\n  var min = _ref.min,\n    max = _ref.max;\n  var minimum;\n  var maximum;\n  if (typeof min !== 'number' && typeof max !== 'number') {\n    // neither provided, default to \"1\"\n    minimum = 1;\n    maximum = 1;\n  } else {\n    minimum = typeof min === 'number' ? min : 1;\n    maximum = typeof max === 'number' ? max : Infinity;\n  }\n  return {\n    minimum: minimum,\n    maximum: maximum\n  };\n}\nfunction chunkByType(items) {\n  var chunk = [];\n  var lastType;\n  return items.reduce(function (chunks, item) {\n    var itemType = (0, _typeOf[\"default\"])(item);\n    if (!lastType || itemType === lastType) {\n      chunk.push(item);\n    } else {\n      chunks.push(chunk);\n      chunk = [item];\n    }\n    lastType = itemType;\n    return chunks;\n  }, []).concat(chunk.length > 0 ? [chunk] : []);\n}\nfunction validateChunks(specifiers, props, propName, componentName) {\n  var items = props[propName];\n  var chunks = chunkByType(items);\n  for (var _len = arguments.length, rest = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {\n    rest[_key - 4] = arguments[_key];\n  }\n  for (var i = 0; i < specifiers.length; i += 1) {\n    var _specifiers$i = specifiers[i],\n      validator = _specifiers$i.validator,\n      min = _specifiers$i.min,\n      max = _specifiers$i.max;\n    var _getMinMax = getMinMax({\n        min: min,\n        max: max\n      }),\n      minimum = _getMinMax.minimum,\n      maximum = _getMinMax.maximum;\n    if (chunks.length === 0 && minimum === 0) {\n      // no chunks left, but this specifier does not require any items\n      continue; // eslint-disable-line no-continue\n    }\n\n    var arrayOfValidator = (0, _propTypes.arrayOf)(validator).isRequired;\n    var chunk = chunks.shift(); // extract the next chunk to test\n\n    var chunkError = arrayOfValidator.apply(void 0, [_objectSpread(_objectSpread({}, props), {}, _defineProperty({}, propName, chunk)), propName, componentName].concat(rest));\n    if (chunkError) {\n      // this chunk is invalid\n      if (minimum === 0) {\n        // but, specifier has a min of 0 and can be skipped\n        chunks.unshift(chunk); // put the chunk back, for the next iteration\n\n        continue; // eslint-disable-line no-continue\n      }\n\n      return chunkError;\n    } // chunk is valid!\n\n    if (chunk.length < minimum) {\n      return new RangeError(\"\".concat(componentName, \": specifier index \").concat(i, \" requires a minimum of \").concat(min, \" items, but only has \").concat(chunk.length, \".\"));\n    }\n    if (chunk.length > maximum) {\n      return new RangeError(\"\".concat(componentName, \": specifier index \").concat(i, \" requires a maximum of \").concat(max, \" items, but has \").concat(chunk.length, \".\"));\n    }\n  }\n  if (chunks.length > 0) {\n    return new TypeError(\"\".concat(componentName, \": after all \").concat(specifiers.length, \" specifiers matched, \").concat(chunks.length, \" types of items were remaining.\"));\n  }\n  return null;\n}\nvar specifierValidator = (0, _withShape[\"default\"])((0, _object[\"default\"])(), specifierShape).isRequired;\nfunction sequenceOfValidator() {\n  for (var _len2 = arguments.length, specifiers = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    specifiers[_key2] = arguments[_key2];\n  }\n  if (specifiers.length === 0) {\n    throw new RangeError('sequenceOf: at least one specifier is required');\n  }\n  var errors = specifiers.map(function (specifier, i) {\n    return specifierValidator({\n      specifier: specifier\n    }, 'specifier', 'sequenceOf specifier', \"suequenceOf specifier, index \".concat(i), \"specifier, index \".concat(i));\n  });\n  if (errors.some(Boolean)) {\n    throw new TypeError(\"\\n      sequenceOf: all specifiers must match the appropriate shape.\\n\\n      Errors:\\n        \".concat(errors.map(function (e, i) {\n      return \" - Argument index \".concat(i, \": \").concat(e.message);\n    }).join(',\\n        '), \"\\n    \"));\n  }\n  var validator = function sequenceOf(props, propName) {\n    var propValue = props[propName];\n    if (propValue == null) {\n      return null;\n    }\n    for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n      rest[_key3 - 2] = arguments[_key3];\n    }\n    var error = _propTypes.array.apply(void 0, [props, propName].concat(rest));\n    if (error) {\n      return error;\n    }\n    return validateChunks.apply(void 0, [specifiers, props, propName].concat(rest));\n  };\n  validator.isRequired = function sequenceOfRequired(props, propName, componentName) {\n    for (var _len4 = arguments.length, rest = new Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {\n      rest[_key4 - 3] = arguments[_key4];\n    }\n    var error = _propTypes.array.isRequired.apply(_propTypes.array, [props, propName, componentName].concat(rest));\n    if (error) {\n      return error;\n    }\n    return validateChunks.apply(void 0, [specifiers, props, propName, componentName].concat(rest));\n  };\n  return (0, _wrapValidator[\"default\"])(validator, 'sequenceOf', specifiers);\n}","map":{"version":3,"names":["_propTypes","require","_and","_interopRequireDefault","_between","_nonNegativeInteger","_object","_withShape","_typeOf","_wrapValidator","minValidator","maxValidator","gte","validateRange","min","max","RangeError","specifierShape","validator","props","propName","propValue","TypeError","getMinMax","_ref","minimum","maximum","Infinity","chunkByType","items","chunk","lastType","reduce","chunks","item","itemType","push","concat","length","validateChunks","specifiers","componentName","_len","arguments","rest","Array","_key","i","_specifiers$i","_getMinMax","arrayOfValidator","arrayOf","isRequired","shift","chunkError","apply","_objectSpread","_defineProperty","unshift","specifierValidator","sequenceOfValidator","_len2","_key2","errors","map","specifier","some","Boolean","e","message","join","sequenceOf","_len3","_key3","error","array","sequenceOfRequired","_len4","_key4"],"sources":["C:\\Users\\animi\\Downloads\\React-projects-master\\React-projects-master\\Abodbnb\\node_modules\\airbnb-prop-types\\src\\sequenceOf.js"],"sourcesContent":["import { array, arrayOf } from 'prop-types';\n\nimport and from './and';\nimport between from './between';\nimport nonNegativeInteger from './nonNegativeInteger';\nimport object from './object';\nimport withShape from './withShape';\nimport typeOf from './helpers/typeOf';\nimport wrapValidator from './helpers/wrapValidator';\n\nconst minValidator = nonNegativeInteger;\nconst maxValidator = and([nonNegativeInteger, between({ gte: 1 })]);\n\nfunction validateRange(min, max) {\n  if (typeof max !== 'number' || typeof min !== 'number') {\n    return null; // no additional checking needed unless both are present\n  }\n\n  if (min <= max) {\n    return null;\n  }\n  return new RangeError('min must be less than or equal to max');\n}\n\nconst specifierShape = {\n  validator(props, propName) {\n    const { [propName]: propValue } = props;\n    if (typeof propValue !== 'function') {\n      return new TypeError('\"validator\" must be a propType validator function');\n    }\n    return null;\n  },\n\n  min(props, propName) {\n    return minValidator(props, propName) || validateRange(props.min, props.max);\n  },\n\n  max(props, propName) {\n    return maxValidator(props, propName) || validateRange(props.min, props.max);\n  },\n};\n\nfunction getMinMax({ min, max }) {\n  let minimum;\n  let maximum;\n  if (typeof min !== 'number' && typeof max !== 'number') {\n    // neither provided, default to \"1\"\n    minimum = 1;\n    maximum = 1;\n  } else {\n    minimum = typeof min === 'number' ? min : 1;\n    maximum = typeof max === 'number' ? max : Infinity;\n  }\n  return { minimum, maximum };\n}\n\nfunction chunkByType(items) {\n  let chunk = [];\n  let lastType;\n  return items.reduce((chunks, item) => {\n    const itemType = typeOf(item);\n    if (!lastType || itemType === lastType) {\n      chunk.push(item);\n    } else {\n      chunks.push(chunk);\n      chunk = [item];\n    }\n    lastType = itemType;\n    return chunks;\n  }, []).concat(chunk.length > 0 ? [chunk] : []);\n}\n\nfunction validateChunks(specifiers, props, propName, componentName, ...rest) {\n  const { [propName]: items } = props;\n  const chunks = chunkByType(items);\n\n  for (let i = 0; i < specifiers.length; i += 1) {\n    const { validator, min, max } = specifiers[i];\n\n    const { minimum, maximum } = getMinMax({ min, max });\n\n    if (chunks.length === 0 && minimum === 0) {\n      // no chunks left, but this specifier does not require any items\n      continue; // eslint-disable-line no-continue\n    }\n\n    const arrayOfValidator = arrayOf(validator).isRequired;\n\n    const chunk = chunks.shift(); // extract the next chunk to test\n\n    const chunkError = arrayOfValidator(\n      { ...props, [propName]: chunk },\n      propName,\n      componentName,\n      ...rest,\n    );\n\n    if (chunkError) { // this chunk is invalid\n      if (minimum === 0) { // but, specifier has a min of 0 and can be skipped\n        chunks.unshift(chunk); // put the chunk back, for the next iteration\n        continue; // eslint-disable-line no-continue\n      }\n      return chunkError;\n    }\n\n    // chunk is valid!\n\n    if (chunk.length < minimum) {\n      return new RangeError(`${componentName}: specifier index ${i} requires a minimum of ${min} items, but only has ${chunk.length}.`);\n    }\n\n    if (chunk.length > maximum) {\n      return new RangeError(`${componentName}: specifier index ${i} requires a maximum of ${max} items, but has ${chunk.length}.`);\n    }\n  }\n\n  if (chunks.length > 0) {\n    return new TypeError(`${componentName}: after all ${specifiers.length} specifiers matched, ${chunks.length} types of items were remaining.`);\n  }\n\n  return null;\n}\n\nconst specifierValidator = withShape(object(), specifierShape).isRequired;\n\nexport default function sequenceOfValidator(...specifiers) {\n  if (specifiers.length === 0) {\n    throw new RangeError('sequenceOf: at least one specifier is required');\n  }\n\n  const errors = specifiers.map((specifier, i) => specifierValidator(\n    { specifier },\n    'specifier',\n    'sequenceOf specifier',\n    `suequenceOf specifier, index ${i}`,\n    `specifier, index ${i}`,\n  ));\n  if (errors.some(Boolean)) {\n    throw new TypeError(`\n      sequenceOf: all specifiers must match the appropriate shape.\n\n      Errors:\n        ${errors.map((e, i) => ` - Argument index ${i}: ${e.message}`).join(',\\n        ')}\n    `);\n  }\n\n  const validator = function sequenceOf(props, propName, ...rest) {\n    const { [propName]: propValue } = props;\n\n    if (propValue == null) {\n      return null;\n    }\n\n    const error = array(props, propName, ...rest);\n    if (error) {\n      return error;\n    }\n\n    return validateChunks(specifiers, props, propName, ...rest);\n  };\n\n  validator.isRequired = function sequenceOfRequired(props, propName, componentName, ...rest) {\n    const error = array.isRequired(props, propName, componentName, ...rest);\n    if (error) {\n      return error;\n    }\n\n    return validateChunks(specifiers, props, propName, componentName, ...rest);\n  };\n\n  return wrapValidator(validator, 'sequenceOf', specifiers);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAEA,IAAAC,IAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,QAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,mBAAA,GAAAF,sBAAA,CAAAF,OAAA;AACA,IAAAK,OAAA,GAAAH,sBAAA,CAAAF,OAAA;AACA,IAAAM,UAAA,GAAAJ,sBAAA,CAAAF,OAAA;AACA,IAAAO,OAAA,GAAAL,sBAAA,CAAAF,OAAA;AACA,IAAAQ,cAAA,GAAAN,sBAAA,CAAAF,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMS,YAAY,GAAGL,mBAAA,WAArB;AACA,IAAMM,YAAY,GAAG,IAAAT,IAAA,aAAI,CAACG,mBAAA,WAAD,EAAqB,IAAAD,QAAA,aAAQ;EAAEQ,GAAG,EAAE;AAAP,CAAR,CAArB,CAAJ,CAArB;AAEA,SAASC,aAATA,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;EAC/B,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOD,GAAP,KAAe,QAA9C,EAAwD;IACtD,OAAO,IAAP,CADsD,CACzC;EACd;;EAED,IAAIA,GAAG,IAAIC,GAAX,EAAgB;IACd,OAAO,IAAP;EACD;EACD,OAAO,IAAIC,UAAJ,CAAe,uCAAf,CAAP;AACD;AAED,IAAMC,cAAc,GAAG;EACrBC,SADqB,WAAAA,UACXC,KADW,EACJC,QADI,EACM;IAAA,IACLC,SADK,GACSF,KADT,CAChBC,QADgB;IAEzB,IAAI,OAAOC,SAAP,KAAqB,UAAzB,EAAqC;MACnC,OAAO,IAAIC,SAAJ,CAAc,mDAAd,CAAP;IACD;IACD,OAAO,IAAP;EACD,CAPoB;EASrBR,GATqB,WAAAA,IASjBK,KATiB,EASVC,QATU,EASA;IACnB,OAAOV,YAAY,CAACS,KAAD,EAAQC,QAAR,CAAZ,IAAiCP,aAAa,CAACM,KAAK,CAACL,GAAP,EAAYK,KAAK,CAACJ,GAAlB,CAArD;EACD,CAXoB;EAarBA,GAbqB,WAAAA,IAajBI,KAbiB,EAaVC,QAbU,EAaA;IACnB,OAAOT,YAAY,CAACQ,KAAD,EAAQC,QAAR,CAAZ,IAAiCP,aAAa,CAACM,KAAK,CAACL,GAAP,EAAYK,KAAK,CAACJ,GAAlB,CAArD;EACD;AAfoB,CAAvB;AAkBA,SAASQ,SAATA,CAAAC,IAAA,EAAiC;EAAA,IAAZV,GAAY,GAAAU,IAAA,CAAZV,GAAY;IAAPC,GAAO,GAAAS,IAAA,CAAPT,GAAO;EAC/B,IAAIU,OAAJ;EACA,IAAIC,OAAJ;EACA,IAAI,OAAOZ,GAAP,KAAe,QAAf,IAA2B,OAAOC,GAAP,KAAe,QAA9C,EAAwD;IACtD;IACAU,OAAO,GAAG,CAAV;IACAC,OAAO,GAAG,CAAV;EACD,CAJD,MAIO;IACLD,OAAO,GAAG,OAAOX,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgC,CAA1C;IACAY,OAAO,GAAG,OAAOX,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgCY,QAA1C;EACD;EACD,OAAO;IAAEF,OAAO,EAAPA,OAAF;IAAWC,OAAO,EAAPA;EAAX,CAAP;AACD;AAED,SAASE,WAATA,CAAqBC,KAArB,EAA4B;EAC1B,IAAIC,KAAK,GAAG,EAAZ;EACA,IAAIC,QAAJ;EACA,OAAOF,KAAK,CAACG,MAAN,CAAa,UAACC,MAAD,EAASC,IAAT,EAAkB;IACpC,IAAMC,QAAQ,GAAG,IAAA3B,OAAA,aAAO0B,IAAP,CAAjB;IACA,IAAI,CAACH,QAAD,IAAaI,QAAQ,KAAKJ,QAA9B,EAAwC;MACtCD,KAAK,CAACM,IAAN,CAAWF,IAAX;IACD,CAFD,MAEO;MACLD,MAAM,CAACG,IAAP,CAAYN,KAAZ;MACAA,KAAK,GAAG,CAACI,IAAD,CAAR;IACD;IACDH,QAAQ,GAAGI,QAAX;IACA,OAAOF,MAAP;EACD,CAVM,EAUJ,EAVI,EAUAI,MAVA,CAUOP,KAAK,CAACQ,MAAN,GAAe,CAAf,GAAmB,CAACR,KAAD,CAAnB,GAA6B,EAVpC,CAAP;AAWD;AAED,SAASS,cAATA,CAAwBC,UAAxB,EAAoCrB,KAApC,EAA2CC,QAA3C,EAAqDqB,aAArD,EAA6E;EAAA,IACvDZ,KADuD,GAC7CV,KAD6C,CAClEC,QADkE;EAE3E,IAAMa,MAAM,GAAGL,WAAW,CAACC,KAAD,CAA1B;EAF2E,SAAAa,IAAA,GAAAC,SAAA,CAAAL,MAAA,EAANM,IAAM,OAAAC,KAAA,CAAAH,IAAA,OAAAA,IAAA,WAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;IAANF,IAAM,CAAAE,IAAA,QAAAH,SAAA,CAAAG,IAAA;EAAA;EAI3E,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,UAAU,CAACF,MAA/B,EAAuCS,CAAC,IAAI,CAA5C,EAA+C;IAAA,IAAAC,aAAA,GACbR,UAAU,CAACO,CAAD,CADG;MACrC7B,SADqC,GAAA8B,aAAA,CACrC9B,SADqC;MAC1BJ,GAD0B,GAAAkC,aAAA,CAC1BlC,GAD0B;MACrBC,GADqB,GAAAiC,aAAA,CACrBjC,GADqB;IAAA,IAAAkC,UAAA,GAGhB1B,SAAS,CAAC;QAAET,GAAG,EAAHA,GAAF;QAAOC,GAAG,EAAHA;MAAP,CAAD,CAHO;MAGrCU,OAHqC,GAAAwB,UAAA,CAGrCxB,OAHqC;MAG5BC,OAH4B,GAAAuB,UAAA,CAG5BvB,OAH4B;IAK7C,IAAIO,MAAM,CAACK,MAAP,KAAkB,CAAlB,IAAuBb,OAAO,KAAK,CAAvC,EAA0C;MACxC;MACA,SAFwC,CAE9B;IACX;;IAED,IAAMyB,gBAAgB,GAAG,IAAAlD,UAAA,CAAAmD,OAAA,EAAQjC,SAAR,EAAmBkC,UAA5C;IAEA,IAAMtB,KAAK,GAAGG,MAAM,CAACoB,KAAP,EAAd,CAZ6C,CAYf;;IAE9B,IAAMC,UAAU,GAAGJ,gBAAgB,CAAAK,KAAhB,UAAAC,aAAA,CAAAA,aAAA,KACZrC,KADY,OAAAsC,eAAA,KACJrC,QADI,EACOU,KADP,IAEjBV,QAFiB,EAGjBqB,aAHiB,EAAAJ,MAAA,CAIdO,IAJc,EAAnB;IAOA,IAAIU,UAAJ,EAAgB;MAAE;MAChB,IAAI7B,OAAO,KAAK,CAAhB,EAAmB;QAAE;QACnBQ,MAAM,CAACyB,OAAP,CAAe5B,KAAf,EADiB,CACM;;QACvB,SAFiB,CAEP;MACX;;MACD,OAAOwB,UAAP;IACD,CA3B4C,CA6B7C;;IAEA,IAAIxB,KAAK,CAACQ,MAAN,GAAeb,OAAnB,EAA4B;MAC1B,OAAO,IAAIT,UAAJ,IAAAqB,MAAA,CAAkBI,aAAlB,wBAAAJ,MAAA,CAAoDU,CAApD,6BAAAV,MAAA,CAA+EvB,GAA/E,2BAAAuB,MAAA,CAA0GP,KAAK,CAACQ,MAAhH,OAAP;IACD;IAED,IAAIR,KAAK,CAACQ,MAAN,GAAeZ,OAAnB,EAA4B;MAC1B,OAAO,IAAIV,UAAJ,IAAAqB,MAAA,CAAkBI,aAAlB,wBAAAJ,MAAA,CAAoDU,CAApD,6BAAAV,MAAA,CAA+EtB,GAA/E,sBAAAsB,MAAA,CAAqGP,KAAK,CAACQ,MAA3G,OAAP;IACD;EACF;EAED,IAAIL,MAAM,CAACK,MAAP,GAAgB,CAApB,EAAuB;IACrB,OAAO,IAAIhB,SAAJ,IAAAe,MAAA,CAAiBI,aAAjB,kBAAAJ,MAAA,CAA6CG,UAAU,CAACF,MAAxD,2BAAAD,MAAA,CAAsFJ,MAAM,CAACK,MAA7F,qCAAP;EACD;EAED,OAAO,IAAP;AACD;AAED,IAAMqB,kBAAkB,GAAG,IAAApD,UAAA,aAAU,IAAAD,OAAA,cAAV,EAAoBW,cAApB,EAAoCmC,UAA/D;AAEe,SAASQ,mBAATA,CAAA,EAA4C;EAAA,SAAAC,KAAA,GAAAlB,SAAA,CAAAL,MAAA,EAAZE,UAAY,OAAAK,KAAA,CAAAgB,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAAZtB,UAAY,CAAAsB,KAAA,IAAAnB,SAAA,CAAAmB,KAAA;EAAA;EACzD,IAAItB,UAAU,CAACF,MAAX,KAAsB,CAA1B,EAA6B;IAC3B,MAAM,IAAItB,UAAJ,CAAe,gDAAf,CAAN;EACD;EAED,IAAM+C,MAAM,GAAGvB,UAAU,CAACwB,GAAX,CAAe,UAACC,SAAD,EAAYlB,CAAZ;IAAA,OAAkBY,kBAAkB,CAChE;MAAEM,SAAS,EAATA;IAAF,CADgE,EAEhE,WAFgE,EAGhE,sBAHgE,kCAAA5B,MAAA,CAIhCU,CAJgC,uBAAAV,MAAA,CAK5CU,CAL4C,EAApC;EAAA,CAAf,CAAf;EAOA,IAAIgB,MAAM,CAACG,IAAP,CAAYC,OAAZ,CAAJ,EAA0B;IACxB,MAAM,IAAI7C,SAAJ,mGAAAe,MAAA,CAIA0B,MAAM,CAACC,GAAP,CAAW,UAACI,CAAD,EAAIrB,CAAJ;MAAA,4BAAAV,MAAA,CAA+BU,CAA/B,QAAAV,MAAA,CAAqC+B,CAAC,CAACC,OAAvC;IAAA,CAAX,EAA6DC,IAA7D,CAAkE,aAAlE,CAJA,YAAN;EAMD;EAED,IAAMpD,SAAS,GAAG,SAASqD,UAATA,CAAoBpD,KAApB,EAA2BC,QAA3B,EAA8C;IAAA,IAC1CC,SAD0C,GAC5BF,KAD4B,CACrDC,QADqD;IAG9D,IAAIC,SAAS,IAAI,IAAjB,EAAuB;MACrB,OAAO,IAAP;IACD;IAL6D,SAAAmD,KAAA,GAAA7B,SAAA,CAAAL,MAAA,EAANM,IAAM,OAAAC,KAAA,CAAA2B,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAN7B,IAAM,CAAA6B,KAAA,QAAA9B,SAAA,CAAA8B,KAAA;IAAA;IAO9D,IAAMC,KAAK,GAAG1E,UAAA,CAAA2E,KAAA,CAAApB,KAAA,UAAMpC,KAAN,EAAaC,QAAb,EAAAiB,MAAA,CAA0BO,IAA1B,EAAd;IACA,IAAI8B,KAAJ,EAAW;MACT,OAAOA,KAAP;IACD;IAED,OAAOnC,cAAc,CAAAgB,KAAd,UAAef,UAAf,EAA2BrB,KAA3B,EAAkCC,QAAlC,EAAAiB,MAAA,CAA+CO,IAA/C,EAAP;EACD,CAbD;EAeA1B,SAAS,CAACkC,UAAV,GAAuB,SAASwB,kBAATA,CAA4BzD,KAA5B,EAAmCC,QAAnC,EAA6CqB,aAA7C,EAAqE;IAAA,SAAAoC,KAAA,GAAAlC,SAAA,CAAAL,MAAA,EAANM,IAAM,OAAAC,KAAA,CAAAgC,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAANlC,IAAM,CAAAkC,KAAA,QAAAnC,SAAA,CAAAmC,KAAA;IAAA;IAC1F,IAAMJ,KAAK,GAAG1E,UAAA,CAAA2E,KAAA,CAAMvB,UAAN,CAAAG,KAAA,CAAAvD,UAAA,CAAA2E,KAAA,GAAiBxD,KAAjB,EAAwBC,QAAxB,EAAkCqB,aAAlC,EAAAJ,MAAA,CAAoDO,IAApD,EAAd;IACA,IAAI8B,KAAJ,EAAW;MACT,OAAOA,KAAP;IACD;IAED,OAAOnC,cAAc,CAAAgB,KAAd,UAAef,UAAf,EAA2BrB,KAA3B,EAAkCC,QAAlC,EAA4CqB,aAA5C,EAAAJ,MAAA,CAA8DO,IAA9D,EAAP;EACD,CAPD;EASA,OAAO,IAAAnC,cAAA,aAAcS,SAAd,EAAyB,YAAzB,EAAuCsB,UAAvC,CAAP;AACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}